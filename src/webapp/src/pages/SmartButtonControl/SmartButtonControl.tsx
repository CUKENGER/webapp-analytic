import { BlockTitle } from "@/components/@common/BlockTitle"
import { Notice } from "@/components/@common/Notice"
import { UIButton } from "@/components/ui/UIButton"
import { SubmitHandler, useForm } from "react-hook-form"
import { useNavigate, useParams } from 'react-router'
import { FormField } from './FormField'
import { useToast } from '@/hooks/use-toast'
import { useState } from 'react'
import { cn } from '@/lib/utils'
import { PageLayout } from '@/atoms/PageLayout'
import { MainContainerButton } from '@/components/@common/MainContainerButton'
import { PATHS } from '@/components/utils/paths'
import { OperationResultState } from "../OperationResult/OperationResult"

export interface SmartButtonFormData {
  postLink: string
  buttonName: string
  messageSign: string
  messageUnsign: string
}

const SmartButtonControl = () => {

  const { toast } = useToast()
  const { id } = useParams()
  const navigate = useNavigate()
  const [isLoading, setIsLoading] = useState(false)

  const {
    control,
    handleSubmit,
    trigger,
    formState: { isValid },
  } = useForm<SmartButtonFormData>({
    defaultValues: {
      postLink: "",
      buttonName: "üéÅ –ó–∞–±—Ä–∞—Ç—å –ø–æ–¥–∞—Ä–æ–∫",
      messageUnsign: "‚ö†Ô∏è –ü–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –∫–∞–Ω–∞–ª –∏ –∑–∞–±–µ—Ä–∏—Ç–µ –ø–æ–¥–∞—Ä–æ–∫.",
      messageSign: "–ù–∞–∂–º–∏—Ç–µ –Ω–∞ —ç–º–æ–¥–∑–∏ üéÅüéÅüéÅ –≤ –∫–æ–Ω—Ü–µ –ø–æ—Å—Ç–∞ –∏ –∑–∞–±–µ—Ä–∏—Ç–µ –ø–æ–¥–∞—Ä–æ–∫!",
    },
    mode: "onChange",
  })

  const onSubmit: SubmitHandler<SmartButtonFormData> = async (data) => {
    console.log("Form submitted:", data)
    setIsLoading(true)
    try {
      // –°–∏–º—É–ª—è—Ü–∏—è API-–∑–∞–ø—Ä–æ—Å–∞
      await new Promise((resolve) => setTimeout(resolve, 500))
      const state: OperationResultState = {
        content: {
          text: '–í –≤–∞—à –ø–æ—Å—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∞ —É–º–Ω–∞—è –∫–Ω–æ–ø–∫–∞. –ó–∞–∫—Ä–µ–ø–∏—Ç–µ –ø–æ—Å—Ç, –µ—Å–ª–∏ —ç—Ç–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ. –í—ã –º–æ–∂–µ—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –µ–≥–æ –≤ —Å–∞–º–æ–º –∫–∞–Ω–∞–ª–µ –≤ –ª—é–±–æ–µ –≤—Ä–µ–º—è.'
        },
        notice: {
          text: '–ù–µ –∑–∞–±—É–¥—å—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å —Å—Å—ã–ª–∫—É –Ω–∞ –ø–æ–¥–∞—Ä–æ–∫ –≤ —ç–º–æ–¥–∑–∏! –ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ –≤',
          link: {
            text: '–∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏',
            url: 'https://mbel.notion.site/help-telegraphyx',
            suffix: '.'
          }
        },
        button: {
          text: '–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å',
          redirectPath: PATHS.projects.project(id ?? '/')
        },
        backPath: PATHS.projects.project(id ?? '/')
      }
      navigate('/result', { state })
    } catch (error) {
      // –û—à–∏–±–∫–∞
      toast({
        description: "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞"
      })
      console.error('Error submit form', error)
    } finally {
      setIsLoading(false)
    }
  }

  const isRights = false

  // –í–∞–ª–∏–¥–∞—Ü–∏—è —Å—Å—ã–ª–∫–∏ —Ç–æ–ª—å–∫–æ –ø–æ t.me
  const telegramLinkPattern = /^t\.me\/.+$/i
  const commonRules = {
    required: "–≠—Ç–æ –ø–æ–ª–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ",
    maxLength: {
      value: 200,
      message: "–¢–µ–∫—Å—Ç –Ω–µ –¥–æ–ª–∂–µ–Ω –ø—Ä–µ–≤—ã—à–∞—Ç—å 200 —Å–∏–º–≤–æ–ª–æ–≤.",
    },
  }


  const isSubmitDisabled = !isValid || isLoading

  return (
    <PageLayout className='bg-tg-secondary'>
      <BlockTitle title="–ü–æ—Å—Ç —Å —É–º–Ω–æ–π –∫–Ω–æ–ø–∫–æ–π">
        –î–æ–±–∞–≤—å—Ç–µ —É–º–Ω—É—é –∫–Ω–æ–ø–∫—É –≤ –≤–∞—à –ø–æ—Å—Ç
      </BlockTitle>
      {isRights && (
        <Notice className="mb-4 text-sm" error>
          –î–æ–±–∞–≤—å—Ç–µ –≤ –≤–∞—à–µ–º –∫–∞–Ω–∞–ª–µ —É –±–æ—Ç–∞ @tgraphyx_bot –ø—Ä–∞–≤–∞ –Ω–∞ ¬´–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
          —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏¬ª.
        </Notice>
      )}
      <form
        onSubmit={handleSubmit(onSubmit)}
        className="flex flex-col flex-grow"
      >
        <div className="w-full flex flex-col gap-4">
          <FormField
            name="postLink"
            control={control}
            title="–°—Å—ã–ª–∫–∞ –Ω–∞ –ø–æ—Å—Ç"
            placeholder="–°—Å—ã–ª–∫–∞ –Ω–∞ –ø–æ—Å—Ç..."
            footerLabel={
              <span>
                –°—Å—ã–ª–∫–∞ –Ω–∞ –ø–æ—Å—Ç –≤ –≤–∞—à–µ–º –∫–∞–Ω–∞–ª–µ, –≥–¥–µ –Ω—É–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —É–º–Ω—É—é –∫–Ω–æ–ø–∫—É. –ù–∞–ø—Ä–∏–º–µ—Ä:{" "}
                <span className="text-tg-text">t.me/channel/123</span>.
              </span>
            }
            rules={{
              ...commonRules,
              pattern: {
                value: telegramLinkPattern,
                message: "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —Å—Å—ã–ª–∫–∞.",
              },
            }}
            trigger={trigger}
          />
          <FormField
            name="buttonName"
            control={control}
            title="–ù–∞–∑–≤–∞–Ω–∏–µ –∫–Ω–æ–ø–∫–∏"
            placeholder="–ù–∞–∑–≤–∞–Ω–∏–µ –∫–Ω–æ–ø–∫–∏"
            footerLabel="–ö–Ω–æ–ø–∫–∞, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –≤ –ø–æ—Å—Ç–µ."
            rules={commonRules}
            trigger={trigger}
          />
          <FormField
            name="messageUnsign"
            control={control}
            title="–°–æ–æ–±—â–µ–Ω–∏–µ, –µ—Å–ª–∏ –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω"
            placeholder="–°–æ–æ–±—â–µ–Ω–∏–µ, –µ—Å–ª–∏ –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω"
            footerLabel="–°–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –µ—Å–ª–∏ –æ–Ω –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω –Ω–∞ –≤–∞—à –∫–∞–Ω–∞–ª."
            rules={commonRules}
            isTextarea
            trigger={trigger}
          />
          <FormField
            name="messageSign"
            control={control}
            title="–°–æ–æ–±—â–µ–Ω–∏–µ, –µ—Å–ª–∏ –ø–æ–¥–ø–∏—Å–∞–Ω"
            placeholder="–°–æ–æ–±—â–µ–Ω–∏–µ, –µ—Å–ª–∏ –ø–æ–¥–ø–∏—Å–∞–Ω"
            footerLabel="–°–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–¥–ø–∏—Å–∞–ª—Å—è –Ω–∞ –≤–∞—à –∫–∞–Ω–∞–ª."
            rules={commonRules}
            isTextarea
            trigger={trigger}
          />
        </div>
        <MainContainerButton>
          <div className="flex flex-col gap-2 small-screen:flex-row">
            <UIButton
              variant="outline"
              type="button"
              onClick={() => navigate(`/projects/${id}`)}
            >
              –û—Ç–º–µ–Ω–∏—Ç—å
            </UIButton>
            <UIButton
              variant="primary"
              type="submit"
              className={cn("h-[56px]", isSubmitDisabled && 'bg-tg-background')}
              position="center"
              disabled={isSubmitDisabled}
              isLoading={isLoading}
              disabledStyle='bg'
            >
              –î–æ–±–∞–≤–∏—Ç—å
            </UIButton>
          </div>
        </MainContainerButton>
      </form>
    </PageLayout>
  )
}

export default SmartButtonControl
