/**
 * This file was generated by kysely-codegen.
 * Please do not edit it manually.
 */

import type { ColumnType } from "kysely";

export type Generated<T> = T extends ColumnType<infer S, infer I, infer U>
  ? ColumnType<S, I | undefined, U>
  : ColumnType<T, T | undefined, T>;

export type Int8 = ColumnType<string, bigint | number | string, bigint | number | string>;

export type Json = JsonValue;

export type JsonArray = JsonValue[];

export type JsonObject = {
  [x: string]: JsonValue | undefined;
};

export type JsonPrimitive = boolean | number | string | null;

export type JsonValue = JsonArray | JsonObject | JsonPrimitive;

export type Numeric = ColumnType<string, number | string, number | string>;

export type Timestamp = ColumnType<Date, Date | string, Date | string>;

export interface Accesses {
  channelUuid: string | null;
  createdAt: Generated<Timestamp>;
  id: Generated<number>;
  userId: number | null;
}

export interface AccessesBot {
  botId: number | null;
  createdAt: Generated<Timestamp>;
  id: Generated<number>;
  userId: number | null;
}

export interface BotEntity {
  bot_landing_id: number | null;
  BotPrivet: number | null;
  cleverAppUrl: string | null;
  email: string | null;
  encryptedBotToken: string;
  id: Generated<number>;
  isActive: Generated<boolean>;
  isRecurentPaymentActive: Generated<boolean>;
  leadtexUrl: string | null;
  queueJobIDs: Generated<string>;
  ref: string | null;
  tgAdminID: Numeric;
  tgBotID: Numeric;
  tgUsername: string;
  yaCounterID: Int8 | null;
  yandexJWT: string | null;
  YandexOAuthId: number | null;
}

export interface BotLandingPage {
  botID: Int8;
  folderName: string | null;
  id: Generated<number>;
  inn: string | null;
  legal: string | null;
  redirectEnable: Generated<boolean>;
  tgAdminID: Int8;
  yaCounterID: Int8 | null;
}

export interface BotPrivet {
  botID: Numeric;
  id: Generated<number>;
  isActive: Generated<boolean>;
  isJoinRequest: Generated<boolean>;
  privetButton: string;
  privetMessage: string;
  tgChannelID: Numeric;
}

export interface BotsCompanies {
  ad_id: string | null;
  campaign_id: string | null;
}

export interface BotsStats {
  ad_id: string | null;
  campaign_id: string | null;
  date: Timestamp | null;
  redirected: Int8 | null;
  subscribed: Int8 | null;
  visited: Int8 | null;
}

export interface BotTariffPaymentEpoch {
  botId: number | null;
  createdAt: Generated<Timestamp>;
  epochToAdd: Numeric;
  id: Generated<number>;
  idLastPayments: Numeric | null;
  paidFromEpoch: Numeric;
  paidUntilEpoch: Numeric;
  tariff: string;
  updatedAt: Generated<Timestamp>;
}

export interface BotYandexMetrics {
  createdAtEpoch: number;
  id: Generated<number>;
  inviteLinkSource: string | null;
  isad: string | null;
  isRedirectConversed: Generated<boolean>;
  isStartConversed: Generated<boolean>;
  redirectedAtEpoch: number | null;
  sid: string | null;
  tgBotName: string | null;
  tgphxID: string | null;
  tgUserID: Int8 | null;
  utmCampaign: string | null;
  utmContent: string | null;
  utmMedium: string | null;
  utmSource: string | null;
  utmTerm: string | null;
  visitedAtEpoch: number | null;
  yaClientID: Int8 | null;
  yaCounterID: number | null;
  yclid: string | null;
}

export interface BotYandexReport {
  adID: Generated<string>;
  adTitle: Generated<string>;
  botID: number | null;
  campaignID: Generated<string>;
  campaignName: Generated<string>;
  clicks: Generated<number>;
  cost: Generated<Numeric>;
  createdAtEpoch: number;
  date: string;
  hidden: Generated<boolean>;
  id: Generated<number>;
  impressions: Generated<number>;
  isBlank: Generated<boolean>;
  isCampaignWizardCreated: Generated<boolean>;
  isFinished: Generated<boolean>;
  redirected: Generated<number>;
  subscribed: Generated<number>;
  timestamp: string | null;
  unsubscribed: Generated<number>;
  visited: Generated<number>;
  yandexJWT: string;
}

export interface Channel {
  addedAtEpoch: number;
  approve_chat_join_request: boolean | null;
  BotPrivet: number | null;
  CommunityInviteLink: number | null;
  email: string | null;
  googleJWT: string | null;
  isActive: Generated<boolean>;
  isRecurentPaymentActive: Generated<boolean>;
  isWithoutPayment: Generated<string | null>;
  isWithoutRedirect: Generated<boolean>;
  isWithoutUtm: Generated<boolean>;
  join_request: boolean | null;
  landingID: number | null;
  paidUntilEpoch: number | null;
  paidUntilEpochBased: number | null;
  queueJobIDs: Generated<string>;
  tgAdminID: Int8;
  tgChannelID: Int8;
  tgChatType: Generated<string>;
  tgInviteLink: string | null;
  tgTitle: string;
  tgUsername: string | null;
  timezone: Generated<string>;
  uuid: Generated<string>;
  yaCounterID: Int8 | null;
  yandexJWT: string | null;
  YandexOAuthId: number | null;
}

export interface ChannelActualizeUsername {
  channel_exists: boolean | null;
  channel_id: Int8 | null;
  is_active: boolean | null;
  username: string | null;
}

export interface ChannelCategory {
  category: string | null;
  channel_id: Int8;
  created_dt: Timestamp | null;
  uuid: string;
}

export interface ChannelInfo {
  addedAtEpoch: string;
  adminUsername: Generated<Json>;
  creatorUsername: string | null;
  id: Generated<number>;
  isPaid: boolean;
  paidAtEpoch: string | null;
  subscribersCount: Numeric;
  tgChannelID: Numeric;
  tgTitle: string;
  tgUsername: string | null;
  tgxAdmin: string | null;
}

export interface ChannelInviteLink {
  channelUuid: string | null;
  chat_id: Numeric;
  cost: Generated<Numeric>;
  createdAtEpoch: number;
  creates_join_request: Generated<boolean>;
  expire_date: number | null;
  firstSubscriberEpoch: number | null;
  id: Generated<number>;
  invite_link: string;
  is_primary: Generated<boolean>;
  is_revoked: Generated<boolean>;
  member_limit: number | null;
  name: string | null;
}

export interface ChannelPost {
  ChannelPostReactions: number | null;
  chatType: string;
  createdAtEpoch: number;
  date: number;
  editDate: number | null;
  id: Generated<number>;
  message_id: number;
  subscribers_count: Numeric | null;
  text: string | null;
  tgChannelID: Int8;
  tgTitle: string;
  tgUsername: string | null;
  updateId: Int8;
  vievs_count: Numeric | null;
}

export interface ChannelPostActualizeStatus {
  channel_error: boolean | null;
  channel_id: Int8 | null;
  flag_is_deleted: boolean | null;
  id: number | null;
  message_id: number | null;
}

export interface ChannelPostCategory {
  category: string | null;
  message_id: number;
  post_id: number;
  target: string | null;
  tg_channel_id: Int8;
}

export interface ChannelPostReactions {
  date: number;
  id: Generated<number>;
  message_id: number;
  reactions: Json | null;
  tgChannelID: Int8;
  updateId: Int8;
}

export interface ChannelPostStatsVersions {
  id: Generated<Int8>;
  insert_dt: Generated<Timestamp | null>;
  post_id: number | null;
  reactions: string | null;
  total_reactions: number | null;
  views: Int8 | null;
}

export interface ChannelSubscribesStatsVersions {
  channel_id: Int8 | null;
  id: Generated<Int8>;
  insert_dt: Generated<Timestamp | null>;
  subscribers: Int8 | null;
  username: string | null;
}

export interface ChannelTariffPaymentEpoch {
  channelUuid: string | null;
  createdAt: Generated<Timestamp>;
  epochToAdd: Numeric;
  id: Generated<number>;
  idLastPayments: Numeric | null;
  paidFromEpoch: Numeric;
  paidUntilEpoch: Numeric;
  tariff: string;
  updatedAt: Generated<Timestamp>;
}

export interface Client {
  id: Generated<number>;
  isad: string | null;
  isRedirectConversed: Generated<boolean>;
  memberID: number | null;
  rbClickid: string | null;
  redirectedAtEpoch: number | null;
  sid: string | null;
  tgChannelID: Int8;
  tgInviteLink: string | null;
  tgphxID: string | null;
  utmCampaign: string | null;
  utmContent: string | null;
  utmMedium: string | null;
  utmSource: string | null;
  utmTerm: string | null;
  visitedAtEpoch: number;
  vkPixelID: string | null;
  yaClientID: Int8 | null;
  yaCounterID: number | null;
  yclid: string | null;
}

export interface ClientReportTelegraphyx {
  adID: string | null;
  adTitle: string | null;
  campaignID: string | null;
  campaignName: string | null;
  channelUUID: string | null;
  clicks: number | null;
  cost: Numeric | null;
  date: Timestamp | null;
  hidden: boolean | null;
  id: number | null;
  if_cost: Numeric | null;
  impressions: number | null;
  pdp_by_all: Numeric | null;
  pdp_by_channel: Numeric | null;
  redirected: number | null;
  subscribed: Int8 | null;
  unsubscribed: Int8 | null;
}

export interface CommunityInviteLink {
  creates_join_request: boolean;
  expire_date: number | null;
  id: Generated<number>;
  invite_link: string;
  is_primary: boolean | null;
  is_revoked: boolean | null;
  member_limit: number | null;
  name: string | null;
  pending_join_request_count: number | null;
}

export interface CommunityMember {
  communityInviteLinkId: number | null;
  id: Generated<number>;
  tgFirstName: string | null;
  tgLanguageCode: string | null;
  tgLastName: string | null;
  tgStatus: string;
  tgUserID: Numeric;
  tgUsername: string | null;
}

export interface ConBetUtmSourceAndLink {
  expenditure: Numeric | null;
  invite_link: string | null;
  release_date: Timestamp | null;
  utm_source: string | null;
}

export interface CustomInviteLink {
  channelUUID: string | null;
  createdAtEpoch: number;
  firstSubscriberEpoch: number | null;
  id: Generated<number>;
  name: string | null;
  url: string;
}

export interface CustomInviteLinkAdditional {
  cost: Generated<Numeric>;
  id: Generated<number>;
  invite_link: string;
}

export interface Dates {
  date_of: Timestamp | null;
}

export interface GeneralReport {
  channelUUID: string | null;
  createdAtEpoch: number;
  date: string;
  id: Generated<number>;
  isFinished: Generated<boolean>;
  redirected: Generated<number>;
  subscribed: Generated<number>;
  subscribedUsernames: Generated<string[]>;
  unsubscribed: Generated<number>;
  unsubscribedUsernames: Generated<string[]>;
  visited: Generated<number>;
}

export interface InviteLinkReport {
  createdAtEpoch: number;
  customInviteLinkID: number | null;
  date: string;
  id: Generated<number>;
  isFinished: Generated<boolean>;
  subscribed: Generated<number>;
  subscribedUsernames: Generated<string[]>;
  unsubscribed: Generated<number>;
  unsubscribedUsernames: Generated<string[]>;
}

export interface LandingPage {
  folderName: string | null;
  id: Generated<number>;
  inn: string | null;
  legal: string | null;
  redirectEnable: Generated<boolean>;
  redirectToPost: Int8 | null;
  tgChannelID: Int8;
  tgUserID: Int8;
  yaCounterID: Int8 | null;
}

export interface Match {
  client_id: number;
  createdAtEpoch: number;
  id: Generated<number>;
  member_id: number;
  redirectedAtEpoch: number;
  subscribedAtEpoch: number;
  tgChannelID: Int8;
}

export interface Member {
  id: Generated<number>;
  isSubscribeConversed: Generated<boolean>;
  subscribedAtEpoch: number | null;
  tgChannelID: Int8;
  tgFirstName: string;
  tgInviteLink: string | null;
  tgLanguageCode: string | null;
  tgLastName: string | null;
  tgStatus: string;
  tgUserID: Int8;
  tgUsername: string | null;
  unsubscribedAtEpoch: number | null;
}

export interface Migrations {
  id: Generated<number>;
  name: string;
  timestamp: Int8;
}

export interface NeurogenerateGenerates {
  channel_id: Int8;
  description_ffp: string | null;
  generate_id: Int8;
  generate_ts: Generated<Timestamp | null>;
  status: string | null;
}

export interface NeurogenerateLogs {
  channel_id: Int8;
  generate_id: Int8;
  result_text: string | null;
  stage: string | null;
}

export interface NeurogeneratePains {
  channel_id: Int8;
  generate_id: Int8;
  pain: string | null;
  reason: string | null;
}

export interface NeurogenerateTitleandvisual {
  channel_id: Int8;
  gen_number: number | null;
  generate_id: Int8;
  midjourney_prompt: string | null;
  minio_link: string | null;
  title: string | null;
  title_text: string | null;
  title_visual: string | null;
}

export interface OfflineConversionYm {
  attempts: Generated<number>;
  botID: number | null;
  channelUUID: string | null;
  clientIdType: string;
  createdAt: Generated<Timestamp>;
  errors: string | null;
  exportTable: Generated<Json>;
  id: Generated<number>;
  result: Json | null;
  sendAt: Timestamp;
  updatedAt: Generated<Timestamp>;
  yaCounterID: number;
}

export interface Payment {
  channelUUID: string | null;
  createdAtEpoch: number;
  description: string;
  epochToAdd: number;
  id: Generated<number>;
  isSuccessful: Generated<boolean>;
  outSum: number;
  signatureValue: string | null;
  title: string;
  updatedAt: Generated<Timestamp>;
}

export interface PaymentBot {
  botID: number | null;
  createdAtEpoch: number;
  description: string;
  epochToAdd: number;
  id: Generated<number>;
  isSuccessful: Generated<boolean>;
  outSum: number;
  signatureValue: string | null;
  title: string;
  updatedAt: Generated<Timestamp>;
}

export interface PaymentWorksop {
  createdAtEpoch: number;
  description: string;
  id: Generated<number>;
  isSuccessful: Generated<boolean>;
  outSum: number;
  signatureValue: string | null;
  tgUserID: Int8;
  title: string;
}

export interface PostButton {
  buttonName: string;
  channelUUID: string | null;
  id: Generated<number>;
  ifSubscribed: string;
  ifUnsubscribed: string;
  postID: Numeric;
  tgChannelID: Numeric;
}

export interface PythonLogs {
  plog_id: Generated<number>;
  plog_text: string | null;
  plog_ts: Generated<Timestamp | null>;
}

export interface SubscribesStatsByYandexReport {
  ad_id: string | null;
  campaign_id: string | null;
  channel_id: Int8 | null;
  date: Timestamp | null;
  subscribed: Int8 | null;
  unsubscribed: Int8 | null;
}

export interface SubscribesStatsByYandexReportMasterCompanies {
  campaign_id: string | null;
  channel_id: Int8 | null;
  date: Timestamp | null;
  subscribed: Int8 | null;
  unsubscribed: Int8 | null;
}

export interface SuperDailyAnalyseContent {
  channel_id: Int8;
  completion_tokens: number | null;
  created_dt: Generated<Timestamp | null>;
  log_id: Generated<number>;
  message_id: number | null;
  post_id: number | null;
  prompt_tokens: number | null;
  recom: string | null;
  status: string | null;
  total_tokens: number | null;
  type_of_request: string | null;
}

export interface TelegraphyxReportV2 {
  bots_sum_total: Int8 | null;
  bots_total: Int8 | null;
  connect_channel_total: Int8 | null;
  date_of: Timestamp | null;
  payments_sum_first: Int8 | null;
  payments_sum_other: Int8 | null;
  payments_total_first: Int8 | null;
  payments_total_other: Int8 | null;
  start_bot_total: Int8 | null;
  workshop_sum_total: Int8 | null;
  workshop_total: Int8 | null;
  yd_campaign_total: Int8 | null;
}

export interface TestCpaData {
  channel_uuid: string | null;
  if_cost: Numeric | null;
  if_subscribed: Numeric | null;
  pdp_by_all: Numeric | null;
  pdp_by_channel: Numeric | null;
}

export interface User {
  balance: Generated<number>;
  botMetricsID: Int8 | null;
  createdAtEpoch: number;
  id: Generated<number>;
  isActive: Generated<boolean>;
  isPrivet: Generated<boolean>;
  onboardingFrom: string | null;
  referrerID: Int8 | null;
  tgFirstName: string;
  tgLanguageCode: string | null;
  tgLastMessageID: number | null;
  tgLastName: string | null;
  tgUserID: Int8;
  tgUsername: string | null;
}

export interface VActiveChannelPostWct {
  category: string | null;
  channel_id: Int8 | null;
  date: Timestamp | null;
  id: number | null;
  is_active_channel: boolean | null;
  message_id: number | null;
  reactions: string | null;
  target: string | null;
  text: string | null;
  tg_username: string | null;
  total_reactions: Numeric | null;
  uuid: string | null;
}

export interface VActiveSubscribtion {
  channel_id: Int8 | null;
  status: string | null;
  uuid: string | null;
}

export interface VChannelCategory {
  category: string | null;
  created_dt: Timestamp | null;
  status: string | null;
  tg_channel_id: Int8 | null;
  tg_title: string | null;
  total_post: Int8 | null;
  uuid: string | null;
}

export interface VChannelPost {
  channel_id: Int8 | null;
  created_at_epoch: number | null;
  date: number | null;
  message_id: number | null;
  post_text: string | null;
  reaction_total_on_post: Numeric | null;
  reactions_summary: string | null;
  tg_title: string | null;
  tg_username: string | null;
  uuid: string | null;
}

export interface VChannelPostReactions {
  channel_id: Int8 | null;
  date: number | null;
  id: number | null;
  message_id: number | null;
  reaction: string | null;
  reaction_total: Numeric | null;
  update_id: Int8 | null;
}

export interface VPosevyRaw {
  ch_added_at: Timestamp | null;
  ch_is_activve: boolean | null;
  channel_uuid: string | null;
  is_successful: boolean | null;
  landing_id: number | null;
  out_sum: number | null;
  p_created_at: Timestamp | null;
  tg_channel_id: Int8 | null;
  tg_invite_link: string | null;
  tg_user_id: Int8 | null;
  tg_username: string | null;
  utm_source: string | null;
  uuid: string | null;
}

export interface VPostStatsForSuperdaily {
  category: string | null;
  channel_category: string | null;
  channel_id: Int8 | null;
  insert_dt: Timestamp | null;
  message_id: number | null;
  post_created_dt: Timestamp | null;
  post_id: number | null;
  reactions: string | null;
  ser: Numeric | null;
  subscribers: Int8 | null;
  svr: Numeric | null;
  target: string | null;
  text: string | null;
  total_reactions: number | null;
  username: string | null;
  ver: Numeric | null;
  views: Int8 | null;
}

export interface VPosyveMart {
  paymented: Int8 | null;
  revenue: Int8 | null;
  subscribed: Int8 | null;
  utm_source: string | null;
  visited: Int8 | null;
}

export interface VYandexDirectCampaignRecommendation {
  ad_id: string | null;
  campaign: string | null;
  campaign_id: string | null;
  campaign_title: string | null;
  channel_recommendation: string | null;
  channel_uuid: string | null;
  date: string | null;
  pdp_cost: Numeric | null;
  system_recommendation: string | null;
  title: string | null;
  total_cost: Numeric | null;
  total_subscribed: Int8 | null;
}

export interface YandexOAuth {
  access_token: string;
  createdAt: Generated<Timestamp>;
  expires_in: Numeric;
  id: Generated<number>;
  refresh_token: string;
  tgChannelID: Int8;
  token_type: string;
  updatedAt: Generated<Timestamp>;
}

export interface YandexReport {
  adID: Generated<string>;
  adTitle: Generated<string>;
  campaignID: Generated<string>;
  campaignName: Generated<string>;
  channelUUID: string | null;
  clicks: Generated<number>;
  cost: Generated<Numeric>;
  createdAtEpoch: number;
  date: string;
  hidden: Generated<boolean>;
  id: Generated<number>;
  impressions: Generated<number>;
  isBlank: Generated<boolean>;
  isCampaignWizardCreated: Generated<boolean>;
  isFinished: Generated<boolean>;
  redirected: Generated<number>;
  subscribed: Generated<number>;
  subscribedUsernames: Generated<string[]>;
  timestamp: string | null;
  unsubscribed: Generated<number>;
  unsubscribedUsernames: Generated<string[]>;
  visited: Generated<number>;
  yandexJWT: string;
}

export interface DB {
  accesses: Accesses;
  accesses_bot: AccessesBot;
  bot_entity: BotEntity;
  bot_landing_page: BotLandingPage;
  bot_privet: BotPrivet;
  bot_tariff_payment_epoch: BotTariffPaymentEpoch;
  bot_yandex_metrics: BotYandexMetrics;
  bot_yandex_report: BotYandexReport;
  bots_companies: BotsCompanies;
  bots_stats: BotsStats;
  channel: Channel;
  channel_actualize_username: ChannelActualizeUsername;
  channel_category: ChannelCategory;
  channel_info: ChannelInfo;
  channel_invite_link: ChannelInviteLink;
  channel_post: ChannelPost;
  channel_post_actualize_status: ChannelPostActualizeStatus;
  channel_post_category: ChannelPostCategory;
  channel_post_reactions: ChannelPostReactions;
  channel_post_stats_versions: ChannelPostStatsVersions;
  channel_subscribes_stats_versions: ChannelSubscribesStatsVersions;
  channel_tariff_payment_epoch: ChannelTariffPaymentEpoch;
  client: Client;
  client_report_telegraphyx: ClientReportTelegraphyx;
  community_invite_link: CommunityInviteLink;
  community_member: CommunityMember;
  con_bet_utm_source_and_link: ConBetUtmSourceAndLink;
  custom_invite_link: CustomInviteLink;
  custom_invite_link_additional: CustomInviteLinkAdditional;
  dates: Dates;
  general_report: GeneralReport;
  invite_link_report: InviteLinkReport;
  landing_page: LandingPage;
  match: Match;
  member: Member;
  migrations: Migrations;
  "neurogenerate.generates": NeurogenerateGenerates;
  "neurogenerate.logs": NeurogenerateLogs;
  "neurogenerate.pains": NeurogeneratePains;
  "neurogenerate.titleandvisual": NeurogenerateTitleandvisual;
  offline_conversion_ym: OfflineConversionYm;
  payment: Payment;
  payment_bot: PaymentBot;
  payment_worksop: PaymentWorksop;
  post_button: PostButton;
  python_logs: PythonLogs;
  subscribes_stats_by_yandex_report: SubscribesStatsByYandexReport;
  subscribes_stats_by_yandex_report_master_companies: SubscribesStatsByYandexReportMasterCompanies;
  super_daily_analyse_content: SuperDailyAnalyseContent;
  telegraphyx_report_v2: TelegraphyxReportV2;
  test_cpa_data: TestCpaData;
  user: User;
  v_active_channel_post_wct: VActiveChannelPostWct;
  v_active_subscribtion: VActiveSubscribtion;
  v_channel_category: VChannelCategory;
  v_channel_post: VChannelPost;
  v_channel_post_reactions: VChannelPostReactions;
  v_posevy_raw: VPosevyRaw;
  v_post_stats_for_superdaily: VPostStatsForSuperdaily;
  v_posyve_mart: VPosyveMart;
  v_yandex_direct_campaign_recommendation: VYandexDirectCampaignRecommendation;
  yandex_o_auth: YandexOAuth;
  yandex_report: YandexReport;
}
